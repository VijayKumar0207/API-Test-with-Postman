{
	"info": {
		"_postman_id": "eb124314-b271-4177-b374-e8055c34559b",
		"name": "Task2",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "45448267",
		"_collection_link": "https://vijay-1048548.postman.co/workspace/vijay's-Workspace~169a15f1-7260-40a6-8df8-0d4de9e1bc36/collection/45448267-eb124314-b271-4177-b374-e8055c34559b?action=share&source=collection_link&creator=45448267"
	},
	"item": [
		{
			"name": "data retrivel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.property(\"userId\");\r",
							"    pm.expect(response).to.have.property(\"id\");\r",
							"    pm.expect(response).to.have.property(\"title\");\r",
							"    pm.expect(response).to.have.property(\"body\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://jsonplaceholder.typicode.com/posts/1"
			},
			"response": []
		},
		{
			"name": "data creation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains created resource\", function () {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.property(\"id\");\r",
							"    pm.expect(response.title).to.eql(\"foo\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"foo\",\r\n  \"body\": \"bar\",\r\n  \"userId\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://jsonplaceholder.typicode.com/posts"
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 for successful login\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Tokens are returned\", function () {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.property(\"accessToken\");\r",
							"    pm.expect(response).to.have.property(\"refreshToken\");\r",
							"});\r",
							"pm.test(\"Status code is 200 for successful login\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const response = pm.response.json();\r",
							"pm.environment.set(\"accessToken\", response.accessToken);\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"emilys\",\r\n  \"password\": \"emilyspass\",\r\n  \"expiresInMins\": 30\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://dummyjson.com/auth/login"
			},
			"response": []
		},
		{
			"name": "login info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains user data\", function () {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response).to.have.property(\"id\").eql(1);\r",
							"    pm.expect(response).to.have.property(\"username\").eql(\"emilys\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyjson.com/auth/me?Key= Authorization&Value= Bearer {{accessToken}}",
					"protocol": "https",
					"host": [
						"dummyjson",
						"com"
					],
					"path": [
						"auth",
						"me"
					],
					"query": [
						{
							"key": "Key",
							"value": " Authorization"
						},
						{
							"key": "Value",
							"value": " Bearer {{accessToken}}"
						}
					]
				}
			},
			"response": []
		}
	]
}